{
  "contractName": "BadAdder",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "notify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setAddService",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "doAdd",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"doAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"notify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/zhouyc/dev/ethereum/reentrance/contracts/BadAdder.sol\":\"BadAdder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zhouyc/dev/ethereum/reentrance/contracts/AddService.sol\":{\"keccak256\":\"0xf82e32b5a35ffcd52ff87952d1b56fde042f0a4aca6b18d390d4b501eee57ffd\",\"urls\":[\"bzz-raw://3668a62592337815a4f238765c4dea04fe559d406859b79dd9dea3d04e26866b\",\"dweb:/ipfs/QmV4UUjKzmzhW4BWxGa6NhHRL1GDTWV57LC7VdY7jjdNd4\"]},\"/Users/zhouyc/dev/ethereum/reentrance/contracts/BadAdder.sol\":{\"keccak256\":\"0x53c32213d7ed6151c87868e51a40d9b88c94975b75660e64dd4b1e5eea51a821\",\"urls\":[\"bzz-raw://85ad689d5bab140f1e40688dcc5d9e2246b9b2021f12cd6eedf9a18b20c223af\",\"dweb:/ipfs/QmQT6JGPZUQYUy5oEU6ZwzaQ8gZWvdjDnELJT6Ptz2wAxF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061023f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806375dbaced14610046578063899f589814610050578063d92976901461005a575b600080fd5b61004e61009e565b005b610058610121565b005b61009c6004803603602081101561007057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ce96076040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561010757600080fd5b505af115801561011b573d6000803e3d6000fd5b50505050565b60056001541115610131576101c5565b6001600081548092919060010191905055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ce96076040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b505050505b565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea265627a7a723158202e94d7290786e6414d0eead95ef2a605a1ab092119c8aafd3a412744227056af64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806375dbaced14610046578063899f589814610050578063d92976901461005a575b600080fd5b61004e61009e565b005b610058610121565b005b61009c6004803603602081101561007057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ce96076040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561010757600080fd5b505af115801561011b573d6000803e3d6000fd5b50505050565b60056001541115610131576101c5565b6001600081548092919060010191905055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ce96076040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b505050505b565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea265627a7a723158202e94d7290786e6414d0eead95ef2a605a1ab092119c8aafd3a412744227056af64736f6c63430005100032",
  "sourceMap": "60:451:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:451:1;;;;;;;",
  "deployedSourceMap": "60:451:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:451:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:66;;;:::i;:::-;;177:162;;;:::i;:::-;;345:93;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;345:93:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;443:66;476:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;476:22:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;476:22:1;;;;443:66::o;177:162::-;223:1;214:6;;:10;211:45;;;239:7;;211:45;265:6;;:8;;;;;;;;;;;;;310:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:22:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;310:22:1;;;;177:162;:::o;345:93::-;425:5;400:11;;:31;;;;;;;;;;;;;;;;;;345:93;:::o",
  "source": "pragma solidity >=0.4.25 <0.7.0;\nimport \"./AddService.sol\";\ncontract BadAdder is AdderInterface{\n\n    AddService private _addService;\n    uint private _calls;\n\n    //回调\n    function notify() public{\n        if(_calls > 5){\n            return;\n        }\n        _calls++;\n        //Attention !!!!!!\n        _addService.addByOne();\n    }\n\n    function setAddService(address _addr) public {\n        _addService = AddService(_addr);\n    }\n    function doAdd() public{\n        _addService.addByOne();    \n    }\n}",
  "sourcePath": "/Users/zhouyc/dev/ethereum/reentrance/contracts/BadAdder.sol",
  "ast": {
    "absolutePath": "/Users/zhouyc/dev/ethereum/reentrance/contracts/BadAdder.sol",
    "exportedSymbols": {
      "BadAdder": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/Users/zhouyc/dev/ethereum/reentrance/contracts/AddService.sol",
        "file": "./AddService.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 106,
        "sourceUnit": 57,
        "src": "33:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "AdderInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 56,
              "src": "81:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdderInterface_$56",
                "typeString": "contract AdderInterface"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "81:14:1"
          }
        ],
        "contractDependencies": [
          56
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105,
          56
        ],
        "name": "BadAdder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 63,
            "name": "_addService",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "102:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AddService_$52",
              "typeString": "contract AddService"
            },
            "typeName": {
              "contractScope": null,
              "id": 62,
              "name": "AddService",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 52,
              "src": "102:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddService_$52",
                "typeString": "contract AddService"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "name": "_calls",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "138:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "138:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "201:138:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_calls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "214:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "223:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "214:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 73,
                  "nodeType": "IfStatement",
                  "src": "211:45:1",
                  "trueBody": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "225:31:1",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 67,
                        "id": 71,
                        "nodeType": "Return",
                        "src": "239:7:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "265:8:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_calls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "265:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "265:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_addService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "310:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddService_$52",
                          "typeString": "contract AddService"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addByOne",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "310:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "310:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "310:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:0:1"
            },
            "scope": 105,
            "src": "177:162:1",
            "stateMutability": "nonpayable",
            "superFunction": 55,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "390:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_addService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "400:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddService_$52",
                        "typeString": "contract AddService"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "425:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89,
                        "name": "AddService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "414:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddService_$52_$",
                          "typeString": "type(contract AddService)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "414:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddService_$52",
                        "typeString": "contract AddService"
                      }
                    },
                    "src": "400:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddService_$52",
                      "typeString": "contract AddService"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "400:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddService",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "368:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "367:15:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:1"
            },
            "scope": 105,
            "src": "345:93:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "466:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "_addService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "476:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddService_$52",
                          "typeString": "contract AddService"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addByOne",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "476:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "476:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:1"
            },
            "scope": 105,
            "src": "443:66:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "60:451:1"
      }
    ],
    "src": "0:511:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/zhouyc/dev/ethereum/reentrance/contracts/BadAdder.sol",
    "exportedSymbols": {
      "BadAdder": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/Users/zhouyc/dev/ethereum/reentrance/contracts/AddService.sol",
        "file": "./AddService.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 106,
        "sourceUnit": 57,
        "src": "33:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "AdderInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 56,
              "src": "81:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdderInterface_$56",
                "typeString": "contract AdderInterface"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "81:14:1"
          }
        ],
        "contractDependencies": [
          56
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105,
          56
        ],
        "name": "BadAdder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 63,
            "name": "_addService",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "102:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AddService_$52",
              "typeString": "contract AddService"
            },
            "typeName": {
              "contractScope": null,
              "id": 62,
              "name": "AddService",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 52,
              "src": "102:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddService_$52",
                "typeString": "contract AddService"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "name": "_calls",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "138:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "138:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "201:138:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "_calls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "214:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "223:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "214:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 73,
                  "nodeType": "IfStatement",
                  "src": "211:45:1",
                  "trueBody": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "225:31:1",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 67,
                        "id": 71,
                        "nodeType": "Return",
                        "src": "239:7:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "265:8:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_calls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "265:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "265:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_addService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "310:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddService_$52",
                          "typeString": "contract AddService"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addByOne",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "310:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "310:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "310:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:0:1"
            },
            "scope": 105,
            "src": "177:162:1",
            "stateMutability": "nonpayable",
            "superFunction": 55,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "390:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_addService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "400:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddService_$52",
                        "typeString": "contract AddService"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "425:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89,
                        "name": "AddService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "414:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddService_$52_$",
                          "typeString": "type(contract AddService)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "414:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddService_$52",
                        "typeString": "contract AddService"
                      }
                    },
                    "src": "400:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddService_$52",
                      "typeString": "contract AddService"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "400:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddService",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "368:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "367:15:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:1"
            },
            "scope": 105,
            "src": "345:93:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "466:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "_addService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "476:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddService_$52",
                          "typeString": "contract AddService"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addByOne",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "476:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "476:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:1"
            },
            "scope": 105,
            "src": "443:66:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "60:451:1"
      }
    ],
    "src": "0:511:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1586311537548": {
      "events": {},
      "links": {},
      "address": "0x7ec2960208e6F72b1C3b549Ec2b819945891E99E",
      "transactionHash": "0x8532af64c2cb591d82f914a5c2f153782666a4be68b7815de3d34ce67e44ec2a"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-08T02:10:14.151Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}